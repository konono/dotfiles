# `sheldon` configuration file
# ----------------------------
#
# You can modify this file directly or you can use one of the following
# `sheldon` commands which are provided to assist in editing the config file:
#
# - `sheldon add` to add a new plugin to the config file
# - `sheldon edit` to open up the config file in the default editor
# - `sheldon remove` to remove a plugin from the config file
#
# See the documentation for more https://github.com/rossmacarthur/sheldon#readme

shell = "zsh"

[plugins]

# For example:
#
# [plugins.base16]
# github = "chriskempson/base16-shell"

[templates]
PATH = 'export PATH="$PATH:{{ dir }}"'
defer = "{% for file in files %}zsh-defer source \"{{ file }}\"\n{% endfor %}"
fzf-install = "[[ ! -e {{ dir }}/bin/fzf ]] && {{ dir }}/install --bin\nexport PATH=\"{{ dir }}/bin:$PATH\""
fzf-source = "{% for file in files %}source \"{{ file }}\"\n{% endfor %}"

[plugins.zsh-defer]
github = 'romkatv/zsh-defer'
apply = ['source']

[plugins.fzf]
github = "junegunn/fzf"
apply = ['fzf-install', 'fzf-source']
use = ["shell/completion.zsh", "shell/key-bindings.zsh"]

[plugins.zsh-completions]
github = "zsh-users/zsh-completions"
apply = ['defer']

[plugins.zsh-history-substring-search]
github = "zsh-users/zsh-history-substring-search"
apply = ['defer']

[plugins.enhancd]
github = 'b4b4r07/enhancd'
apply = ['defer']

[plugins.zsh-prompt-benchmark]
github = 'romkatv/zsh-prompt-benchmark'
apply = ['defer']

[plugins.git]
github = 'ohmyzsh/ohmyzsh'
apply = ['defer']

[plugins.async]
github = 'mafredri/zsh-async'
apply = ['defer']

[plugins.powerlevel10k]
github = "romkatv/powerlevel10k"

# [plugins.zsh-autosuggestions]
# github = 'zsh-users/zsh-autosuggestions'
# apply = ['defer']

[plugins.zsh-syntax-highlighting]
github = 'zsh-users/zsh-syntax-highlighting'
apply = ['defer']

# [plugins.dotfiles-sync]
# local = '~/dotfiles/zsh/sync'
# use = ['*.zsh']
# apply = ['source']

# [plugins.dotfiles-defer]
# local = '~/dotfiles/zsh/defer'
# use = ['*.zsh']
# apply = ['defer']

[plugins.colors]
inline = 'autoload -Uz colors && zsh-defer colors'

[plugins.compinit]
inline = 'autoload -Uz compinit && zsh-defer compinit'
