# change prefix key to C-j
unbind C-b
set -g prefix C-g

#Mouse対応
set-option -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# fix Esc key delay time for Vim
set -sg escape-time 0

# extend history limit
set-option -g history-limit 10000000

# ウィンドウ分割後もカレントディレクトリに留まる
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
#bind \} run "WIN_ID=`tmux list-windows |grep active|grep -o \"^[0-9]\"` && tmux split-window -h \"SSHH_INDEX=`tmux display -p \"#{window_index},#{pane_index}\"` zsh -l\"" \; send-keys -t ":${WIN_ID}.{$PANE_ID}" 'sshh ${SSHH_INDEX}' ENTER
bind \] run "source ~/senv && tmux split-window -h \"SSHH_INDEX=`tmux display -p \"#{window_index},#{pane_index}\"` zsh -l\"" \; send-keys -t :"${WIN_ID}"."${PANE_ID}" 'sshh ${SSHH_INDEX}' ENTER
# Assign C-s to split pane horizontally and start a new SSH session

bind - split-window -v -c "#{pane_current_path}"
#bind 0 run "PANE_ID=`tmux list-panes |grep active |grep -o \"^[0-9]\"|xargs -I% echo %+1` tmux split-window -v \"SSHH_INDEX=`tmux display -p \"#{window_index},#{pane_index}\"` zsh -l\"" \; send-keys -t \"\${PANE_ID}\" 'echo ${SSHH_INDEX}' ENTER
bind 0 run "PANE_ID=`tmux list-panes |grep active |grep -o \"^[0-9]\"|xargs -I% echo %+1|bc` && tmux split-window -v \"SSHH_INDEX=`tmux display -p \"#{window_index},#{pane_index}\"` zsh -l\"" \; send-keys -t :0."${PANE_ID}" 'sshh ${SSHH_INDEX}' ENTER

# ウィンドウを閉じた時に番号を詰める
set-option -g renumber-windows on

## viのキーバインドを使用する
setw -g mode-keys vi

## コピーモードの操作をvim風に設定する
#bind-key -t copy-mode-vi C-v begin-selection

#set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

bind-key v copy-mode 
bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

## copy to clipboard
### for Mac
#bind-key -t copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind e setw synchronize-panes on
bind E setw synchronize-panes off

# ===== logging =====

bind S run "mkdir -p ~/.tmux/logs/\$(date +%Y%m%d);tmux capture-pane -S -10000000; tmux show-buffer > \${HOME}/.tmux/logs/\$(date +%Y%m%d)/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log" \; display-message "Logging ..."

# C-b C-p Start logging.
bind-key C-b pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."

#powerline
#set-option -g default-terminal xterm-256color
set-option -g default-terminal screen-256color
set -g terminal-overrides 'screen:colors=256,screen-256color:Ms=\\E]52;%p1%s;%p2%s\\7'

#status line を更新する間隔を 1 秒にする
set-option -g status-interval 1

# window-status を中央揃えで配置する
set-option -g status-justify "left"

# status line の背景色を指定する。
set-option -g status-bg "colour238"

# status line の文字色を指定する。
set-option -g status-fg "colour255"

# status-left の最大の長さを指定する。
set-option -g status-left-length 20

# status-left のフォーマットを指定する。
set-option -g status-left "#[fg=colour255,bg=colour241]Sess: #S #[default]"

# status-right の最大の長さを指定する。
set-option -g status-right-length 70

# status-right のフォーマットを指定する。
set-option -g status-right "#[fg=colour255,bg=colour241] #h | LA: #(if [ $(uname) = 'Linux' ];then cut -d' ' -f-3 /proc/loadavg;else sysctl -n vm.loadavg;fi) |  %m/%d %H:%M:%S#[default]"

# copyモードのハイライトカラーを変更
set-window-option -g mode-style "fg=colour255,bg=colour105"

# window-status のフォーマットを指定する。
set-window-option -g window-status-format " #I: #W "

# カレントウィンドウの window-status のフォーマットを指定する
set-window-option -g window-status-current-format "#[fg=colour255,bg=colour27,bold] #I: #W #[default]"
